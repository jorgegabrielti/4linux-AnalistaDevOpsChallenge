stages:
  - Validate project
  - SCA
  - Build and Push Docker Image
  - Deploy on app machine

build:
  stage: Build and Push Docker Image
  when: manual
  tags:
    - app
  services:
    - docker:latest
  script:
     - "docker login -u ${CI_REGISTRY_USER} -p ${CI_REGISTRY_PASSWORD}"
     - "docker build -t ${CI_REGISTRY_USER}/coffee-shop:latest ."
     - "docker push ${CI_REGISTRY_USER}/coffee-shop:latest"

owasp_dependency_check:
  image:
    name: registry.gitlab.com/gitlab-ci-utils/docker-dependency-check:latest
    entrypoint: [""]
  stage: SCA
  script:
    # Job will scan the project root folder and fail if any vulnerabilities with CVSS > 0 are found
    - >
      ls -lh
      /usr/share/dependency-check/bin/dependency-check.sh --scan "./" --format ALL
      --project "$CI_PROJECT_NAME" --failOnCVSS 0
      --suppression /suppressions/npm_fp_suppression.xml
      --suppression /suppressions/npm_na_suppressions.xml

  allow_failure: true
  artifacts:
    when: always
    paths:
        # Save the HTML and JSON report artifacts
      - "./dependency-check-report.html"
      - "./dependency-check-report.json"


lint:
  stage: Validate project
  when: manual
  tags:
    - app
  script:
    - npm install
    - npm run lint

deploy:
  stage: Deploy on app machine
  when: manual
  tags:
    - app
  script:
     - "docker rm -f coffee-shop-app 2> /dev/null"
     - "docker pull ${CI_REGISTRY_USER}/coffee-shop:latest"
     - "docker run -d -p 3000:3000 --name coffee-shop-app ${CI_REGISTRY_USER}/coffee-shop"
